/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['fnchain.js']) {
  _$jscoverage['fnchain.js'] = [];
  _$jscoverage['fnchain.js'][1] = 0;
  _$jscoverage['fnchain.js'][2] = 0;
  _$jscoverage['fnchain.js'][3] = 0;
  _$jscoverage['fnchain.js'][4] = 0;
  _$jscoverage['fnchain.js'][7] = 0;
  _$jscoverage['fnchain.js'][8] = 0;
  _$jscoverage['fnchain.js'][11] = 0;
  _$jscoverage['fnchain.js'][12] = 0;
  _$jscoverage['fnchain.js'][13] = 0;
  _$jscoverage['fnchain.js'][14] = 0;
  _$jscoverage['fnchain.js'][15] = 0;
  _$jscoverage['fnchain.js'][16] = 0;
  _$jscoverage['fnchain.js'][17] = 0;
  _$jscoverage['fnchain.js'][19] = 0;
  _$jscoverage['fnchain.js'][22] = 0;
  _$jscoverage['fnchain.js'][23] = 0;
  _$jscoverage['fnchain.js'][26] = 0;
  _$jscoverage['fnchain.js'][27] = 0;
  _$jscoverage['fnchain.js'][28] = 0;
  _$jscoverage['fnchain.js'][29] = 0;
  _$jscoverage['fnchain.js'][30] = 0;
}
_$jscoverage['fnchain.js'][1]++;
var FnChain = module.exports = (function FnChain(tasks, callback) {
  _$jscoverage['fnchain.js'][2]++;
  this.tasks = tasks;
  _$jscoverage['fnchain.js'][3]++;
  this.tasksIndex = 0;
  _$jscoverage['fnchain.js'][4]++;
  this.callback = callback;
});
_$jscoverage['fnchain.js'][7]++;
FnChain.prototype.addTask = (function (task) {
  _$jscoverage['fnchain.js'][8]++;
  this.tasks.push(task);
});
_$jscoverage['fnchain.js'][11]++;
FnChain.prototype.onTaskComplete = (function (err, stop) {
  _$jscoverage['fnchain.js'][12]++;
  this.tasksIndex++;
  _$jscoverage['fnchain.js'][13]++;
  if (err || stop || this.tasks.length === this.tasksIndex) {
    _$jscoverage['fnchain.js'][14]++;
    this.args.pop();
    _$jscoverage['fnchain.js'][15]++;
    this.args.unshift(err);
    _$jscoverage['fnchain.js'][16]++;
    this.callback && this.callback.apply(null, this.args);
    _$jscoverage['fnchain.js'][17]++;
    return;
  }
  _$jscoverage['fnchain.js'][19]++;
  this.callNextFunction();
});
_$jscoverage['fnchain.js'][22]++;
FnChain.prototype.callNextFunction = (function () {
  _$jscoverage['fnchain.js'][23]++;
  this.tasks[this.tasksIndex].apply(null, this.args);
});
_$jscoverage['fnchain.js'][26]++;
FnChain.prototype.call = (function () {
  _$jscoverage['fnchain.js'][27]++;
  this.args = Array.prototype.slice.apply(arguments);
  _$jscoverage['fnchain.js'][28]++;
  this.args.push(this.onTaskComplete.bind(this));
  _$jscoverage['fnchain.js'][29]++;
  process.nextTick(this.callNextFunction.bind(this));
  _$jscoverage['fnchain.js'][30]++;
  return this;
});
_$jscoverage['fnchain.js'].source = ["var FnChain = module.exports = function FnChain(tasks, callback) {","  this.tasks = tasks","  this.tasksIndex = 0","  this.callback = callback","}","","FnChain.prototype.addTask = function (task) {","  this.tasks.push(task)","}","","FnChain.prototype.onTaskComplete = function (err, stop) {","  this.tasksIndex++","  if (err || stop || this.tasks.length === this.tasksIndex) {","    this.args.pop()","    this.args.unshift(err)","    this.callback &amp;&amp; this.callback.apply(null, this.args)","    return","  }","  this.callNextFunction()","}","","FnChain.prototype.callNextFunction = function () {","  this.tasks[this.tasksIndex].apply(null, this.args)","}","","FnChain.prototype.call = function () {","  this.args = Array.prototype.slice.apply(arguments)","  this.args.push(this.onTaskComplete.bind(this))","  process.nextTick(this.callNextFunction.bind(this))","  return this;","}"];
